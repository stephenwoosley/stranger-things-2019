{"version":3,"sources":["App.js","index.js","images/stanger-things_raw.png"],"names":["Season","props","content","filter","episode","season","seasonNumber","map","index","AccordionItem","key","className","title","name","rating","App","state","languageChoice","contentData","en_US","image","gallery","src","currentSeason","videoURL","currentSnippet","snippets","currentLocation","locations","toggleLanguage","setState","la_PG","switchSeasons","num","timedSwitcher","items","time","count","setInterval","length","this","aria-label","isActive","prefix","logo","alt","href","ToggleSmall","defaultToggled","labelText","labelA","labelB","disabled","id","onChange","heading","description","role","ContentSwitcher","Switch","text","onClick","Accordion","showIndicators","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5731944b.chunk.js","sourcesContent":["import React from 'react';\nimport { \n  Accordion, \n  AccordionItem, \n  ContentSwitcher, \n  Switch, \n  ToggleSmall \n} from 'carbon-components-react';\nimport { \n  Content,\n  Header,\n  HeaderMenuButton,\n  HeaderMenuItem,\n  HeaderName,\n  HeaderNavigation,\n} from 'carbon-components-react/lib/components/UIShell';\nimport HeaderContainer from \"carbon-components-react/lib/components/UIShell/HeaderContainer\";\nimport { Carousel } from 'react-responsive-carousel';\nimport { Player } from 'video-react';\nimport logo from './images/stanger-things_raw.png';\nimport en_US from './data/en_US';\nimport la_PG from './data/la_PG';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport './App.scss';\n\n\nclass App extends React.Component {\n  state = {\n    languageChoice: 'en_US',\n    contentData: en_US,\n    image: en_US.gallery[0].src,\n    currentSeason: 1,\n    videoURL: en_US[\"video-embed\"],\n    currentSnippet: en_US.snippets[2],\n    currentLocation: en_US.locations[4]\n  }\n\n  componentDidMount() {\n    this.timedSwitcher(this.state.contentData.snippets, 10000);\n    this.timedSwitcher(this.state.contentData.locations, 6350);\n  }\n\n  toggleLanguage = () => {\n    if (this.state.languageChoice === 'en_US') {\n      this.setState({languageChoice: 'la_PG'});\n      this.setState({contentData: la_PG});\n    }\n    else if (this.state.languageChoice === 'la_PG') {\n      this.setState({languageChoice: 'en_US'});\n      this.setState({contentData: en_US});\n    }\n  }\n\n  switchSeasons = (num) => {\n    this.setState({currentSeason: num})\n  }\n\n  timedSwitcher = (items, time) => {\n    let count = 0;\n    let showSnippet = setInterval(() => {\n      if(items === this.state.contentData.snippets) {\n        this.setState({currentSnippet:items[count]});\n      }\n      else if (items === this.state.contentData.locations) {\n        this.setState({currentLocation:items[count]});\n      }\n      count++;\n      if (count === items.length) {\n        count = 0;\n      }\n    }, time);\n  }\n\n  render() {\n\n    const toggleProps = () => ({\n      labelText: 'Page Language',\n      labelA: 'PG',\n      labelB: 'EN',\n      disabled: false\n    });\n\n    return (\n    <div className=\"container\">\n          <Header aria-label=\"IBM Platform Name\">\n            <HeaderMenuButton\n              aria-label=\"Open menu\"\n              // onClick={onClickSideNavExpand}\n              isActive={false}\n            />\n            <HeaderName prefix=''>\n              <img src={logo} alt='stranger-things-logo' className='logo'/>\n              <span className='titleSpan'>in RTP</span>\n            </HeaderName>\n            <HeaderNavigation aria-label='navigation options'>\n              <HeaderMenuItem href=\"#didYouKnow\">Did You Know?</HeaderMenuItem>\n              <HeaderMenuItem href=\"#topEpisodes\">Top Episodes</HeaderMenuItem>\n              <HeaderMenuItem href=\"#media\">Media</HeaderMenuItem>\n            </HeaderNavigation>\n            <ToggleSmall\n              defaultToggled\n              {...toggleProps()}\n              className='toggle-lang'\n              id='toggle-1'\n              aria-label='language toggle'\n              onChange={this.toggleLanguage}\n            /> \n        </Header>\n      <Content>\n        <div className='bx--grid'>\n          <div className='bx--row section-divider'>\n            <div className='bx--col-lg-2'>\n            </div>\n            <div className='bx--col-lg-8'>\n              <h1 className='landing-page__heading'>\n                {this.state.contentData.heading}\n              </h1>\n            </div>\n            <div className='bx--col-lg-2'>\n\n            </div>\n          </div>\n          <div className=\"bx--row section-divider\">\n            <div className='bx--col-lg-2'></div>\n            <div className='bx--col-lg-8'>\n              <h3 className='page-description'>{this.state.contentData.description}</h3>\n            </div>\n            <div className='bx--col-lg-2'></div>\n          </div>\n          <div className='bx--row section-divider' id=\"didYouKnow\">\n            <div className='bx--col-lg-2'></div>\n              <div className='bx--col-lg-8'>\n                <h1 className='section-heading'>\n                <span role=\"img\" aria-label=\"thinking-icon\">ü§î</span> Did You Know? <span role=\"img\" aria-label=\"thinking-icon\">ü§î</span>\n                </h1>\n              </div>\n            <div className='bx--col-lg-2'></div>\n            <div className='bx--col-lg-6'>\n              <h3 className=\"section-subheading\">Show Information & Quotes</h3>\n              <h4 className=\"snippet-holder\">{this.state.currentSnippet}</h4>\n            </div>\n            <div className='bx--col-lg-6'>\n              <h3 className=\"section-subheading\">Durham Locations Referenced</h3>\n              <h3 className=\"snippet-holder\">{this.state.currentLocation}</h3>\n            </div>\n          </div>\n          <div className='bx--row section-divider' id=\"topEpisodes\">\n            <div className='bx--col-lg-2'></div>\n              <div className='bx--col-lg-8'>\n                <h1 className='section-heading'>\n                <span role=\"img\" aria-label=\"trophy-icon\">üèÜ</span> Top Stranger Things Episodes <span role=\"img\" aria-label=\"trophy-icon\">üèÜ</span>\n                </h1>\n              </div>\n            <div className='bx--col-lg-2'></div>\n            <div className='bx--col-lg-12'>\n              <ContentSwitcher>\n                  <Switch name='one' text='Season 1' onClick={() => this.switchSeasons(1)} />\n                  <Switch name='two' text='Season 2' onClick={() => this.switchSeasons(2)} />\n              </ContentSwitcher>\n              <Accordion>\n                <Season \n                  content={this.state.contentData}\n                  seasonNumber={this.state.currentSeason}\n                />\n              </Accordion>\n            </div>\n          </div>\n          <div className='bx--row section-divider' id=\"media\">\n            <div className='bx--col-lg-2'></div>\n              <div className='bx--col-lg-8'>\n                <h1 className='section-heading'>\n                <span role=\"img\" aria-label=\"media-icon\">üìΩ</span> Stranger Things & Durham Media <span role=\"img\" aria-label=\"media-icon\">üìΩ</span>\n                </h1>\n              </div>\n            <div className='bx--col-lg-2'></div>\n            <div className='bx--col-lg-6'>\n              <Player>\n                <source src={this.state.videoURL} />\n              </Player>\n            </div>\n            <div className='bx--col-lg-6 image-slider'>\n              <Carousel showIndicators={false}>\n                  <div>\n                      <img src={this.state.image} alt='slider' />\n                      <p className='legend'>Legend 1</p>\n                  </div>\n                  <div>\n                      <img src={this.state.image} alt='slider' />\n                      <p className='legend'>Legend 2</p>\n                  </div>\n                  <div>\n                      <img src={this.state.image} alt='slider' />\n                      <p className='legend'>Legend 3</p>\n                  </div>\n              </Carousel>\n            </div>\n          </div>\n        </div>\n      </Content>\n    </div>\n    );\n  }\n}\n\nfunction Season(props) {\n  let episodes = [props.content['episode-list']];\n  episodes = props.content['episode-list'].filter((episode) => episode.season === props.seasonNumber);\n  const returnedEpisodes = episodes.map((episode, index) => {\n    return (\n      <AccordionItem \n        key={index}\n        className='season-episode-data'\n        title={episode.name}\n      >\n        <h5>Rating: {episode.rating}</h5>\n      </AccordionItem>\n    );\n  });\n  return returnedEpisodes;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/stanger-things_raw.bd72fcdd.png\";"],"sourceRoot":""}